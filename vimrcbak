"设置leader键成空格，默认为反斜杆
let mapleader=" "
"vimrc 的主要配置
"常用设置
"常用映射
"插件的安装和配置
"自定义函数（vimscript）


"设置主题
"1.evening
"2.slate
"3.peachpuff
"4.koehler
"5.pablo
colorscheme koehler
"colorscheme snazzy
"设置透明
"let g:SnazzyTransparent = 1

"设置行号
set number 

"设置行号距离多少,norelativenumber关闭
set relativenumber 

"设置光标所在字母的下划线
"set cursorline

"设置自动换行不会超出屏幕边缘
set wrap

"设置出现输入的键位
set showcmd

"设置normal模式命令补全
set wildmenu




"把jj设置成Esc键
inoremap jj <Esc>

"打开语法高亮
syntax on 
"打开搜素高亮
set hlsearch
exec "nohlsearch"
"打开边搜索边高亮
set incsearch
"搜索时忽略大小写
set ignorecase
"搜索时智能搜索
set smartcase
noremap = nzz
noremap - Nzz
noremap <LEADER><CR> :nohlsearch<CR>

"R变成后面这个命令
map R :source $MYVIMRC<CR> 
"小写s会删除当前字符使用<nop>变为空
map s <nop>

"保存
map S :w<CR> 

"退出
map Q :q<CR>


"分屏操作向右设置光标向右，左右分屏vsplit上下split
map sr :set splitright<CR>:vsplit<CR>
map sl :set nosplitright<CR>:vsplit<CR>
map su :set nosplitbelow<CR>:split<CR>
map sd :set splitbelow<CR>:split<CR>
"分屏切换光标Ctrl+W hjkl,注意此处LEADER已在文件头更改成空格
map <LEADER>h <C-w>h
map <LEADER>j <C-w>j
map <LEADER>k <C-w>k
map <LEADER>l <C-w>l
"更改分屏的大小
map <up> :res +5<CR>
map <down> :res -5<CR>
map <right> :vertical resize +5<CR>
map <left> :vertical resize -5<CR>

"noremap格式说明
"noremap ×替换后的键位× ×替换前的键位×
""更改移动键位begin
"noremap i k
"noremap k j
"noremap j h
"noremap l l
"注意！这里跳5行操作还是原来为更改移动键位时默认的hjkl
noremap J 5j
noremap K 5k
"i插入模式被更改这里使用h
"noremap h i
"noremap H I
"更改移动键位end


set nocompatible              " 去除VI一致性,必须
filetype off                  " 必须
"
" 设置包括vundle和初始化相关的runtime path
set rtp+=~/.vim/bundle/Vundle.vim
" 请将安装插件的命令放在vundle#begin和vundle#end之间.
call vundle#begin()
" 另一种选择, 指定一个vundle安装插件的路径
"call vundle#begin('~/some/path/here')
" 让vundle管理插件版本,必须
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'plasticboy/vim-markdown' "markdown语法高亮插件
Plugin 'iamcco/markdown-preview.vim' "vim编辑markdown预览插件
let g:mkdp_path_to_chrome = "google-chrome-stable" "设置预览用google chrome打开，同时google chrome安装Markdown Preview Plus
"Plugin 'connorholyday/vim-snazzy'
"Plugin 'ycm-core/YouCompleteMe'
" 以下范例用来支持不同格式的插件安装.
" Github上的插件
" 格式为 Plugin '用户名/插件仓库名'
"Plugin 'tpope/vim-fugitive'
" 来自 http://vim-scripts.org/vim/scripts.html 的插件
" Plugin '插件名称' 实际上是 Plugin 'vim-scripts/插件仓库名'
" 只是此处的用户名可以省略
"Plugin 'L9'
" 由Git支持但不再github上的插件仓库 Plugin 'git clone 后面的地址'
"Plugin 'git://git.wincent.com/command-t.git'
" 本地的Git仓库(例如自己的插件) Plugin 'file:///+本地插件仓库绝对路径'
"Plugin 'file:///home/gmarik/path/to/plugin'
" 插件在仓库的子目录中.
" 正确指定路径用以设置runtimepath. 以下范例插件在sparkup/vim目录下
"Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}
" 安装L9，如果已经安装过这个插件，可利用以下格式避免命名冲突
"Plugin 'ascenator/L9', {'name': 'newL9'}

" 你的所有插件需要在下面这行之前
call vundle#end()            " 必须
filetype plugin indent on    " 必须
" 加载vim自带和插件相应的语法和文件类型相关脚本
" 忽视插件改变缩进,可以使用以下替代:
"filetype plugin on
"
" 简要帮助文档
" :PluginList       - 列出所有已配置的插件
" :PluginInstall    - 安装插件,追加 `!` 用以更新或使用 :PluginUpdate
" :PluginSearch foo - 搜索 foo ; 追加 `!` 清除本地缓存
" :PluginClean      - 清除未使用插件,需要确认; 追加 `!`
" 自动批准移除未使用插件
"
" 查阅 :h vundle 获取更多细节和wiki以及FAQ
" 将你自己对非插件片段放在这行之后
